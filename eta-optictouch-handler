#!/bin/bash
#author : yunusem, hikmet

set -e

now=$(date +%d-%m-%Y\ %T.%3N)

RED='\033[1;31m'
YEL='\033[1;33m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

LOG_FILE=/var/log/eta.log
OPTICTOUCH_PID=/var/run/optictouch.pid
START=0
SUCCESS=0
FAIL=0

USB_SOCKET=''

print_output() {
  now=$(date +%d-%m-%Y\ %T.%3N)
  echo -e "${NC}$now $1" >> $LOG_FILE
}


if [ ! -f $LOG_FILE ]; then
    touch $LOG_FILE
    chmod 666 $LOG_FILE
    print_output "${RED}$0${NC} : creating log file ${YEL}$LOG_FILE${NC}"
fi

print_output "${RED}$0${NC}"
u=$(/usr/bin/whoami)
print_output "${RED}$0${NC} : running as ${YEL}$u${NC}"

remove_pid() {
    if [ -f $OPTICTOUCH_PID ];then
        removed=$(rm -rvf $OPTICTOUCH_PID)
        print_output "${RED}$0${NC} : ${YEL}$removed${NC}"
    fi
}

create_pid() {
    print_output "${RED}$0${NC} : creating ${YEL}$OPTICTOUCH_PID${NC}"
    touch $OPTICTOUCH_PID
    chmod 644 $OPTICTOUCH_PID
}

contains() {
    string="$1"
    substring="$2"
    if test "${string#*$substring}" != "$string"; then
        return 0    # $substring is in $string
    else
        return 1    # $substring is not in $string
    fi
}

handler_loop_p1() {
    while read line
    do
        if contains "$line" "input:"; then
            if contains "$line" "Optical TouchScreen"; then
                print_output "${RED}$0${NC} : input tag detected START = ${YEL}1${NC} FAIL = ${YEL}0${NC} SUCCESS = ${YEL}0${NC}"
                START=1
                FAIL=0
                SUCCESS=0
            fi
        elif contains "$line" "optictouch_probe success!"; then
            print_output "${RED}$0${NC} : optictouch_probe success tag detected SUCCESS = ${YEL}1${NC}"
            SUCCESS=1
        elif contains "$line" "optictouch:"; then
            if contains "$line" "ODT:"; then
                print_output "${RED}$0${NC} : optictouch tag detected START = ${YEL}0${NC} FAIL = ${YEL}1${NC} SUCCESS = ${YEL}0${NC}"
                FAIL=1
                START=0
                SUCCESS=0
                remove_pid
            fi
        fi

        if [ "$SUCCESS" -eq 1 ] && [ "$FAIL" -ne 1 ]; then
            if [ "$START" -eq 1 ]; then
                print_output "${RED}$0${NC} : everything is ${GREEN}OK.${NC}"
                SUCCESS=0
                FAIL=0
                START=0
                create_pid
            fi
        fi
    done < <(tail -F -n 200 /var/log/kern.log)
}

handler_loop_p2_intel() {
    while read line
    do
        if contains "$line" "input:"; then
            if contains "$line" "Touchscreen"; then
                print_output "${RED}$0${NC} : Touchscreen detected in input tag"
                last_column=$(echo "$line" | awk '{print $NF}')

                OIFS="$IFS"
                IFS='/'
                read -a arr <<< "${last_column}"
                IFS="$OIFS"

                arraylength=${#arr[@]}

                for (( i=0; i<${arraylength}; i++ )); do
                    if contains "${arr[${i}]}" "usb"; then
                    USB_SOCKET="${arr[${i}+1]}"
                    fi
                done

                sleep 2
                create_pid
            fi
        elif contains "$line" "optictouch:"; then
            if contains "$line" "fail"; then
                print_output "${RED}$0${NC} : fail detected in optictouch tag"
                remove_pid
            fi
        elif contains "$line" "usb ${USB_SOCKET}"; then
            if contains "$line" "USB disconnect"; then
                print_output "${RED}$0${NC} : USB disconnect  detected in optictouch tag"
                remove_pid
            fi
        fi
    done < <(tail -F -n 200 /var/log/kern.log)
}

handler_loop_p2_amd() {
    while read line
    do
        if contains "$line" "input:"; then
            if contains "$line" "Touchscreen"; then
                print_output "${RED}$0${NC} : Touchscreen detected in input tag"
                last_column=$(echo "$line" | awk '{print $NF}')

                OIFS="$IFS"
                IFS='/'
                read -a arr <<< "${last_column}"
                IFS="$OIFS"

                arraylength=${#arr[@]}

                for (( i=0; i<${arraylength}; i++ )); do
                    if contains "${arr[${i}]}" "usb"; then
                    USB_SOCKET="${arr[${i}+1]}"
                    fi
                done

                sleep 2
                create_pid
            fi
        elif contains "$line" "usb ${USB_SOCKET}"; then
            if contains "$line" "USB disconnect"; then
                print_output "${RED}$0${NC} : USB disconnect  detected in optictouch tag"
                remove_pid
            fi
        fi
    done < <(tail -F -n 200 /var/log/kern.log)
}

while true
do
    if lsusb | grep -qE "(2621:2201|2621:4501)" ; then
        print_output "${RED}$0${NC} : The IWB is ${GREEN}PHASE 2"
        processor=$(lscpu | grep -E "Vendor ID")
        if contains "$processor" "AMD"; then
            print_output "${RED}$0${NC} : The IWB has ${YEL}AMD ${NC}processor."
            handler_loop_p2_amd
        elif contains "$processor" "Intel"; then
            print_output "${RED}$0${NC} : The IWB has ${YEL}Intel ${NC}processor."
            handler_loop_p2_intel
        fi
    elif lsusb | grep -qE "(6615:0084|6615:0085|6615:0086|6615:0087|6615:0088|6615:0c20)" ; then
        print_output "${RED}$0${NC} : The IWB is ${GREEN}PHASE 1"
        handler_loop_p1
    else
        print_output "${RED}$0${NC} : No IWB touch unit detected"
        create_pid
        break
    fi
done
